<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             xmlns:vm="clr-namespace:Signals.ViewModels"
             xmlns:local="clr-namespace:Signals.Views"
             xmlns:lang="clr-namespace:Signals.Resources"
             xmlns:converters="clr-namespace:Signals.Converters"
             x:DataType="vm:AddItemPageViewModel"
             x:Class="Signals.Views.AddItemPageView">

    <Design.DataContext>
        <vm:AddItemPageViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <converters:IntOrEmptyConverter x:Key="IntOrEmptyConverter" />
        <converters:IntOrZeroConverter x:Key="IntOrZeroConverter" />
        <converters:CurrencyOrEmptyConverter x:Key="CurrencyOrEmptyConverter" />
        <converters:DecimalOrEmptyConverter x:Key="DecimalOrEmptyConverter" />
    </UserControl.Resources>

    <Grid RowDefinitions="*, 5, Auto">
        <StackPanel>
            <!-- Back Button -->
            <Button Classes="navigation" Background="Transparent" HorizontalAlignment="Left"
                    Command="{Binding $parent[local:MainView].((vm:MainViewModel)DataContext).GoToHomeCommand, FallbackValue=null}">
                <StackPanel>
                    <!-- Back arrow -->
                    <Label Classes="icon" FontSize="24" Content="&#xE058;"></Label>
                </StackPanel>
            </Button>

            <Grid RowDefinitions="Auto, Auto" ColumnDefinitions="*, 5, Auto">
                <Label Content="{x:Static lang:Resources.SymbolLabel}"></Label>
                <TextBox Grid.Row="1" Grid.Column="0"
                    Text="{Binding Symbol, UpdateSourceTrigger=LostFocus,
                          Converter={StaticResource UpperCaseConverter}}">
                </TextBox>
                <Button Grid.Row="1" Grid.Column="2">
                    <Label Classes="icon" FontSize="24" Content="&#xE13A;x"></Label>
                </Button>
            </Grid>

            <StackPanel Classes="formField">
                <CheckBox IsChecked="{Binding AddToWatchlist}"
                          IsVisible="{Binding EditIsEnabled}"
                          Content="{x:Static lang:Resources.AddToWatchlistLabel}">
                </CheckBox>
                <CheckBox IsChecked="{Binding AddToHoldings}"
                          IsVisible="{Binding EditIsEnabled}"
                          Content="{x:Static lang:Resources.AddToHoldingsLabel}"
                          Command="{Binding LookupSymbolCommand}">
                </CheckBox>
            </StackPanel>

            <StackPanel Classes="formField">

                <StackPanel IsVisible="{Binding  AddToHoldings}">
                    <!-- purchase date and time controls -->
                    <Label Content="{x:Static lang:Resources.DateLabel}"></Label>
                    <DatePicker SelectedDate="{Binding TransactionDate}"></DatePicker>
                    <TimePicker ClockIdentifier="12HourClock" SelectedTime="{Binding TransactionTime}"></TimePicker>

                    <Label Content="{x:Static lang:Resources.UnitsLabel}"></Label>
                    <!--Bug - can't use a value converter because the Numeric UpDown won't bind if you do.-->
                    <!--The value converter prevents an invalid cast exception if the TextBox part of the UpDown is 
                    empty.  The following is a work-around. Setting UpdateSourceTrigger=LostFocus and providing defaults
                    TargetNullValue and FallbackValue prevents the ugly errors from spewing out.  The result is not 
                    quite what I want, but it is acceptable for now. -->
                    <NumericUpDown
                        Value="{Binding UnitsPurchased, 
                    UpdateSourceTrigger=LostFocus, 
                    TargetNullValue=0, FallbackValue=0}"
                        FormatString="###,###,##0"
                        Minimum="0" Maximum="10000000" />
                    <!--<TextBox Name="QuantityInput" Text="{Binding UnitsPurchased }"
                         IsEnabled="{Binding  AddToHoldings}"
                         HorizontalAlignment="Stretch" />-->

                    <Label Content="{x:Static lang:Resources.PriceLabel}"></Label>
                    <TextBox Name="PriceInput"
                             Text="{Binding PurchasePrice, 
                         UpdateSourceTrigger=LostFocus,
                         Converter={StaticResource CurrencyOrEmptyConverter}}"
                             IsEnabled="{Binding  AddToHoldings}" />

                    <!--<StackPanel Orientation="Horizontal">
                    <Label Content="{x:Static lang:Resources.HourLabel}"></Label>
                    <Label>/</Label>
                    <Label Content="{x:Static lang:Resources.MinuteLabel}"></Label>
                </StackPanel>-->
                </StackPanel>
            </StackPanel>

        </StackPanel>
        <StackPanel Grid.Row="2">
            <Button Content="Save" Command="{Binding AddSymbolCommand}"
                    CommandParameter="{Binding $parent[UserControl].((vm:AddItemPageViewModel)DataContext).BackLink, FallbackValue=null}"
                    IsEnabled="{Binding SaveIsEnabled}">
            </Button>
        </StackPanel>
    </Grid>

</UserControl>